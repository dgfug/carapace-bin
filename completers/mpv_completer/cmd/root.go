package cmd

import (
	"os"

	"github.com/carapace-sh/carapace"
	"github.com/carapace-sh/carapace-bin/pkg/actions/tools/mpv"
	"github.com/carapace-sh/carapace/pkg/style"
	"github.com/spf13/cobra"
	"github.com/spf13/pflag"
)

var rootCmd = &cobra.Command{
	Use:   "mpv",
	Short: "a media player",
	Long:  "https://mpv.io/",
	Run:   func(cmd *cobra.Command, args []string) {},
}

func Execute() error {
	return rootCmd.Execute()
}
func init() {
	carapace.Gen(rootCmd).Standalone()

	rootCmd.Flags().String("ab-loop-a", "", "Set loop point")
	rootCmd.Flags().String("ab-loop-b", "", "Set loop Point")
	rootCmd.Flags().String("ab-loop-count", "", "Run A-B only N times")
	rootCmd.Flags().Bool("access-references", false, "Follow any references in the file being opened")
	rootCmd.Flags().String("ad", "", "Specify a priority list of audio decoders to be used")
	rootCmd.Flags().String("ad-lavc-ac3drc", "", "Select the Dynamic Range Compression level for AC-3 audio streams")
	rootCmd.Flags().Bool("ad-lavc-downmix", false, "Whether  to request audio channel downmixing from the decoder")
	rootCmd.Flags().String("ad-lavc-o", "", "")
	rootCmd.Flags().String("ad-lavc-o-add", "", "")
	rootCmd.Flags().String("ad-lavc-o-append", "", "")
	rootCmd.Flags().String("ad-lavc-o-remove", "", "")
	rootCmd.Flags().String("ad-lavc-o-set", "", "")
	rootCmd.Flags().String("ad-lavc-threads", "", "Number  of threads to use for decoding")
	rootCmd.Flags().Bool("ad-queue-enable", false, "Enable running the audio decoder on a separate thread ")
	rootCmd.Flags().String("ad-queue-max-bytes", "", "Maximum approximate allowed size of the queue")
	rootCmd.Flags().String("ad-queue-max-samples", "", "Maximum number samples of the queue")
	rootCmd.Flags().String("ad-queue-max-secs", "", "Maximum number of seconds of media in the queue")
	rootCmd.Flags().String("af", "", "Specify a list of audio filters to  apply  to  the  audio stream")
	rootCmd.Flags().String("af-add", "", "")
	rootCmd.Flags().String("af-append", "", "")
	rootCmd.Flags().String("af-clr", "", "")
	rootCmd.Flags().String("af-defaults-add", "", "")
	rootCmd.Flags().String("af-defaults-append", "", "")
	rootCmd.Flags().String("af-defaults-clr", "", "")
	rootCmd.Flags().String("af-defaults-del", "", "")
	rootCmd.Flags().String("af-defaults-help", "", "")
	rootCmd.Flags().String("af-defaults-pre", "", "")
	rootCmd.Flags().String("af-defaults-remove", "", "")
	rootCmd.Flags().String("af-defaults-set", "", "")
	rootCmd.Flags().String("af-defaults-toggle", "", "")
	rootCmd.Flags().String("af-del", "", "")
	rootCmd.Flags().String("af-help", "", "")
	rootCmd.Flags().String("af-pre", "", "")
	rootCmd.Flags().String("af-remove", "", "")
	rootCmd.Flags().String("af-set", "", "")
	rootCmd.Flags().String("af-toggle", "", "")
	rootCmd.Flags().String("aid", "", "")
	rootCmd.Flags().String("alang", "", "")
	rootCmd.Flags().String("alang-add", "", "")
	rootCmd.Flags().String("alang-append", "", "")
	rootCmd.Flags().String("alang-clr", "", "")
	rootCmd.Flags().String("alang-del", "", "")
	rootCmd.Flags().String("alang-pre", "", "")
	rootCmd.Flags().String("alang-remove", "", "")
	rootCmd.Flags().String("alang-set", "", "")
	rootCmd.Flags().String("alang-toggle", "", "")
	rootCmd.Flags().String("alpha", "", "")
	rootCmd.Flags().String("alsa-buffer-time", "", "")
	rootCmd.Flags().Bool("alsa-ignore-chmap", false, "")
	rootCmd.Flags().String("alsa-mixer-device", "", "")
	rootCmd.Flags().String("alsa-mixer-index", "", "")
	rootCmd.Flags().String("alsa-mixer-name", "", "")
	rootCmd.Flags().Bool("alsa-non-interleaved", false, "")
	rootCmd.Flags().String("alsa-periods", "", "")
	rootCmd.Flags().Bool("alsa-resample", false, "")
	rootCmd.Flags().String("ao", "", "")
	rootCmd.Flags().String("ao-add", "", "")
	rootCmd.Flags().String("ao-append", "", "")
	rootCmd.Flags().String("ao-clr", "", "")
	rootCmd.Flags().String("ao-del", "", "")
	rootCmd.Flags().String("ao-help", "", "")
	rootCmd.Flags().Bool("ao-null-broken-delay", false, "")
	rootCmd.Flags().Bool("ao-null-broken-eof", false, "")
	rootCmd.Flags().String("ao-null-buffer", "", "")
	rootCmd.Flags().String("ao-null-channel-layouts", "", "")
	rootCmd.Flags().String("ao-null-format", "", "")
	rootCmd.Flags().String("ao-null-latency", "", "")
	rootCmd.Flags().String("ao-null-outburst", "", "")
	rootCmd.Flags().String("ao-null-speed", "", "")
	rootCmd.Flags().Bool("ao-null-untimed", false, "")
	rootCmd.Flags().Bool("ao-pcm-append", false, "")
	rootCmd.Flags().String("ao-pcm-file", "", "")
	rootCmd.Flags().Bool("ao-pcm-waveheader", false, "")
	rootCmd.Flags().String("ao-pre", "", "")
	rootCmd.Flags().String("ao-remove", "", "")
	rootCmd.Flags().String("ao-set", "", "")
	rootCmd.Flags().String("ao-toggle", "", "")
	rootCmd.Flags().String("audio", "", "")
	rootCmd.Flags().String("audio-backward-batch", "", "")
	rootCmd.Flags().String("audio-backward-overlap", "", "")
	rootCmd.Flags().String("audio-buffer", "", "")
	rootCmd.Flags().String("audio-channels", "", "")
	rootCmd.Flags().String("audio-client-name", "", "")
	rootCmd.Flags().String("audio-delay", "", "")
	rootCmd.Flags().String("audio-demuxer", "", "")
	rootCmd.Flags().String("audio-device", "", "")
	rootCmd.Flags().String("audio-display", "", "")
	rootCmd.Flags().Bool("audio-exclusive", false, "")
	rootCmd.Flags().Bool("audio-fallback-to-null", false, "")
	rootCmd.Flags().String("audio-file", "", "")
	rootCmd.Flags().String("audio-file-auto", "", "")
	rootCmd.Flags().String("audio-file-paths", "", "")
	rootCmd.Flags().String("audio-file-paths-add", "", "")
	rootCmd.Flags().String("audio-file-paths-append", "", "")
	rootCmd.Flags().String("audio-file-paths-clr", "", "")
	rootCmd.Flags().String("audio-file-paths-del", "", "")
	rootCmd.Flags().String("audio-file-paths-pre", "", "")
	rootCmd.Flags().String("audio-file-paths-remove", "", "")
	rootCmd.Flags().String("audio-file-paths-set", "", "")
	rootCmd.Flags().String("audio-file-paths-toggle", "", "")
	rootCmd.Flags().String("audio-files", "", "")
	rootCmd.Flags().String("audio-files-add", "", "")
	rootCmd.Flags().String("audio-files-append", "", "")
	rootCmd.Flags().String("audio-files-clr", "", "")
	rootCmd.Flags().String("audio-files-del", "", "")
	rootCmd.Flags().String("audio-files-pre", "", "")
	rootCmd.Flags().String("audio-files-remove", "", "")
	rootCmd.Flags().String("audio-files-set", "", "")
	rootCmd.Flags().String("audio-files-toggle", "", "")
	rootCmd.Flags().String("audio-format", "", "")
	rootCmd.Flags().Bool("audio-normalize-downmix", false, "")
	rootCmd.Flags().Bool("audio-pitch-correction", false, "")
	rootCmd.Flags().String("audio-resample-cutoff", "", "")
	rootCmd.Flags().String("audio-resample-filter-size", "", "")
	rootCmd.Flags().Bool("audio-resample-linear", false, "")
	rootCmd.Flags().String("audio-resample-max-output-size", "", "")
	rootCmd.Flags().String("audio-resample-phase-shift", "", "")
	rootCmd.Flags().String("audio-reversal-buffer", "", "")
	rootCmd.Flags().String("audio-samplerate", "", "")
	rootCmd.Flags().String("audio-spdif", "", "")
	rootCmd.Flags().Bool("audio-stream-silence", false, "")
	rootCmd.Flags().String("audio-swresample-o", "", "")
	rootCmd.Flags().String("audio-swresample-o-add", "", "")
	rootCmd.Flags().String("audio-swresample-o-append", "", "")
	rootCmd.Flags().String("audio-swresample-o-remove", "", "")
	rootCmd.Flags().String("audio-swresample-o-set", "", "")
	rootCmd.Flags().String("audio-wait-open", "", "")
	rootCmd.Flags().String("autofit", "", "")
	rootCmd.Flags().String("autofit-larger", "", "")
	rootCmd.Flags().String("autofit-smaller", "", "")
	rootCmd.Flags().Bool("autoload-files", false, "")
	rootCmd.Flags().String("autosync", "", "")
	rootCmd.Flags().String("background", "", "")
	rootCmd.Flags().String("blend-subtitles", "", "")
	rootCmd.Flags().String("bluray-device", "", "")
	rootCmd.Flags().Bool("border", false, "")
	rootCmd.Flags().String("brightness", "", "")
	rootCmd.Flags().String("cache", "", "")
	rootCmd.Flags().String("cache-dir", "", "")
	rootCmd.Flags().Bool("cache-on-disk", false, "")
	rootCmd.Flags().Bool("cache-pause", false, "")
	rootCmd.Flags().Bool("cache-pause-initial", false, "")
	rootCmd.Flags().String("cache-pause-wait", "", "")
	rootCmd.Flags().String("cache-secs", "", "")
	rootCmd.Flags().String("cache-unlink-files", "", "")
	rootCmd.Flags().Bool("cdda-cdtext", false, "")
	rootCmd.Flags().String("cdda-overlap", "", "")
	rootCmd.Flags().String("cdda-paranoia", "", "")
	rootCmd.Flags().String("cdda-sector-size", "", "")
	rootCmd.Flags().Bool("cdda-skip", false, "")
	rootCmd.Flags().String("cdda-span-a", "", "")
	rootCmd.Flags().String("cdda-span-b", "", "")
	rootCmd.Flags().String("cdda-speed", "", "")
	rootCmd.Flags().String("cdda-toc-bias", "", "")
	rootCmd.Flags().String("cdda-toc-offset", "", "")
	rootCmd.Flags().String("cdrom-device", "", "")
	rootCmd.Flags().String("chapter-merge-threshold", "", "")
	rootCmd.Flags().String("chapter-seek-threshold", "", "")
	rootCmd.Flags().String("chapters-file", "", "")
	rootCmd.Flags().Bool("config", false, "")
	rootCmd.Flags().String("config-dir", "", "")
	rootCmd.Flags().String("contrast", "", "")
	rootCmd.Flags().Bool("cookies", false, "")
	rootCmd.Flags().String("cookies-file", "", "")
	rootCmd.Flags().Bool("correct-downscaling", false, "")
	rootCmd.Flags().Bool("correct-pts", false, "")
	rootCmd.Flags().String("cover-art-auto", "", "")
	rootCmd.Flags().String("cover-art-file", "", "")
	rootCmd.Flags().String("cover-art-files", "", "")
	rootCmd.Flags().String("cover-art-files-add", "", "")
	rootCmd.Flags().String("cover-art-files-append", "", "")
	rootCmd.Flags().String("cover-art-files-clr", "", "")
	rootCmd.Flags().String("cover-art-files-del", "", "")
	rootCmd.Flags().String("cover-art-files-pre", "", "")
	rootCmd.Flags().String("cover-art-files-remove", "", "")
	rootCmd.Flags().String("cover-art-files-set", "", "")
	rootCmd.Flags().String("cover-art-files-toggle", "", "")
	rootCmd.Flags().String("cscale", "", "")
	rootCmd.Flags().String("cscale-antiring", "", "")
	rootCmd.Flags().String("cscale-blur", "", "")
	rootCmd.Flags().String("cscale-clamp", "", "")
	rootCmd.Flags().String("cscale-cutoff", "", "")
	rootCmd.Flags().String("cscale-param1", "", "")
	rootCmd.Flags().String("cscale-param2", "", "")
	rootCmd.Flags().String("cscale-radius", "", "")
	rootCmd.Flags().String("cscale-taper", "", "")
	rootCmd.Flags().String("cscale-wblur", "", "")
	rootCmd.Flags().String("cscale-window", "", "")
	rootCmd.Flags().String("cscale-wparam", "", "")
	rootCmd.Flags().String("cscale-wtaper", "", "")
	rootCmd.Flags().String("cuda-decode-device", "", "")
	rootCmd.Flags().String("cursor-autohide", "", "")
	rootCmd.Flags().Bool("cursor-autohide-fs-only", false, "")
	rootCmd.Flags().Bool("deband", false, "")
	rootCmd.Flags().String("deband-grain", "", "")
	rootCmd.Flags().String("deband-iterations", "", "")
	rootCmd.Flags().String("deband-range", "", "")
	rootCmd.Flags().String("deband-threshold", "", "")
	rootCmd.Flags().Bool("deinterlace", false, "")
	rootCmd.Flags().String("demuxer", "", "")
	rootCmd.Flags().String("demuxer-backward-playback-step", "", "")
	rootCmd.Flags().Bool("demuxer-cache-wait", false, "")
	rootCmd.Flags().String("demuxer-cue-codepage", "", "")
	rootCmd.Flags().Bool("demuxer-donate-buffer", false, "")
	rootCmd.Flags().Bool("demuxer-lavf-allow-mimetype", false, "")
	rootCmd.Flags().String("demuxer-lavf-analyzeduration", "", "")
	rootCmd.Flags().String("demuxer-lavf-buffersize", "", "")
	rootCmd.Flags().String("demuxer-lavf-format", "", "")
	rootCmd.Flags().Bool("demuxer-lavf-hacks", false, "")
	rootCmd.Flags().String("demuxer-lavf-linearize-timestamps", "", "")
	rootCmd.Flags().String("demuxer-lavf-o", "", "")
	rootCmd.Flags().String("demuxer-lavf-o-add", "", "")
	rootCmd.Flags().String("demuxer-lavf-o-append", "", "")
	rootCmd.Flags().String("demuxer-lavf-o-remove", "", "")
	rootCmd.Flags().String("demuxer-lavf-o-set", "", "")
	rootCmd.Flags().String("demuxer-lavf-probe-info", "", "")
	rootCmd.Flags().String("demuxer-lavf-probescore", "", "")
	rootCmd.Flags().String("demuxer-lavf-probesize", "", "")
	rootCmd.Flags().Bool("demuxer-lavf-propagate-opts", false, "")
	rootCmd.Flags().String("demuxer-max-back-bytes", "", "")
	rootCmd.Flags().String("demuxer-max-bytes", "", "")
	rootCmd.Flags().Bool("demuxer-mkv-probe-start-time", false, "")
	rootCmd.Flags().String("demuxer-mkv-probe-video-duration", "", "")
	rootCmd.Flags().String("demuxer-mkv-subtitle-preroll", "", "")
	rootCmd.Flags().String("demuxer-mkv-subtitle-preroll-secs", "", "")
	rootCmd.Flags().String("demuxer-mkv-subtitle-preroll-secs-index", "", "")
	rootCmd.Flags().String("demuxer-rawaudio-channels", "", "")
	rootCmd.Flags().String("demuxer-rawaudio-format", "", "")
	rootCmd.Flags().String("demuxer-rawaudio-rate", "", "")
	rootCmd.Flags().String("demuxer-rawvideo-codec", "", "")
	rootCmd.Flags().String("demuxer-rawvideo-format", "", "")
	rootCmd.Flags().String("demuxer-rawvideo-fps", "", "")
	rootCmd.Flags().String("demuxer-rawvideo-h", "", "")
	rootCmd.Flags().String("demuxer-rawvideo-mp-format", "", "")
	rootCmd.Flags().String("demuxer-rawvideo-size", "", "")
	rootCmd.Flags().String("demuxer-rawvideo-w", "", "")
	rootCmd.Flags().String("demuxer-readahead-secs", "", "")
	rootCmd.Flags().String("demuxer-seekable-cache", "", "")
	rootCmd.Flags().String("demuxer-termination-timeout", "", "")
	rootCmd.Flags().Bool("demuxer-thread", false, "")
	rootCmd.Flags().String("display-tags", "", "")
	rootCmd.Flags().String("display-tags-add", "", "")
	rootCmd.Flags().String("display-tags-append", "", "")
	rootCmd.Flags().String("display-tags-clr", "", "")
	rootCmd.Flags().String("display-tags-del", "", "")
	rootCmd.Flags().String("display-tags-pre", "", "")
	rootCmd.Flags().String("display-tags-remove", "", "")
	rootCmd.Flags().String("display-tags-set", "", "")
	rootCmd.Flags().String("display-tags-toggle", "", "")
	rootCmd.Flags().String("dither", "", "")
	rootCmd.Flags().String("dither-depth", "", "")
	rootCmd.Flags().String("dither-size-fruit", "", "")
	rootCmd.Flags().String("drm-atomic", "", "")
	rootCmd.Flags().String("drm-connector", "", "")
	rootCmd.Flags().String("drm-device", "", "")
	rootCmd.Flags().String("drm-draw-plane", "", "")
	rootCmd.Flags().String("drm-draw-surface-size", "", "")
	rootCmd.Flags().String("drm-drmprime-video-plane", "", "")
	rootCmd.Flags().String("drm-format", "", "")
	rootCmd.Flags().String("drm-mode", "", "")
	rootCmd.Flags().String("dscale", "", "")
	rootCmd.Flags().String("dscale-antiring", "", "")
	rootCmd.Flags().String("dscale-blur", "", "")
	rootCmd.Flags().String("dscale-clamp", "", "")
	rootCmd.Flags().String("dscale-cutoff", "", "")
	rootCmd.Flags().String("dscale-param1", "", "")
	rootCmd.Flags().String("dscale-param2", "", "")
	rootCmd.Flags().String("dscale-radius", "", "")
	rootCmd.Flags().String("dscale-taper", "", "")
	rootCmd.Flags().String("dscale-wblur", "", "")
	rootCmd.Flags().String("dscale-window", "", "")
	rootCmd.Flags().String("dscale-wparam", "", "")
	rootCmd.Flags().String("dscale-wtaper", "", "")
	rootCmd.Flags().String("dump-stats", "", "")
	rootCmd.Flags().String("dvbin-card", "", "")
	rootCmd.Flags().String("dvbin-channel-switch-offset", "", "")
	rootCmd.Flags().String("dvbin-file", "", "")
	rootCmd.Flags().Bool("dvbin-full-transponder", false, "")
	rootCmd.Flags().String("dvbin-prog", "", "")
	rootCmd.Flags().String("dvbin-timeout", "", "")
	rootCmd.Flags().String("dvd-angle", "", "")
	rootCmd.Flags().String("dvd-device", "", "")
	rootCmd.Flags().String("dvd-speed", "", "")
	rootCmd.Flags().String("edition", "", "")
	rootCmd.Flags().Bool("embeddedfonts", false, "")
	rootCmd.Flags().String("end", "", "")
	rootCmd.Flags().String("error-diffusion", "", "")
	rootCmd.Flags().String("external-file", "", "")
	rootCmd.Flags().String("external-files", "", "")
	rootCmd.Flags().String("external-files-add", "", "")
	rootCmd.Flags().String("external-files-append", "", "")
	rootCmd.Flags().String("external-files-clr", "", "")
	rootCmd.Flags().String("external-files-del", "", "")
	rootCmd.Flags().String("external-files-pre", "", "")
	rootCmd.Flags().String("external-files-remove", "", "")
	rootCmd.Flags().String("external-files-set", "", "")
	rootCmd.Flags().String("external-files-toggle", "", "")
	rootCmd.Flags().String("fbo-format", "", "")
	rootCmd.Flags().Bool("focus-on-open", false, "")
	rootCmd.Flags().String("force-media-title", "", "")
	rootCmd.Flags().Bool("force-rgba-osd-rendering", false, "")
	rootCmd.Flags().Bool("force-seekable", false, "")
	rootCmd.Flags().String("force-window", "", "")
	rootCmd.Flags().Bool("force-window-position", false, "")
	rootCmd.Flags().String("fps", "", "")
	rootCmd.Flags().String("framedrop", "", "")
	rootCmd.Flags().String("frames", "", "")
	rootCmd.Flags().String("fs", "", "fullscreen playback")
	rootCmd.Flags().String("fs-screen", "", "")
	rootCmd.Flags().String("fs-screen-name", "", "")
	rootCmd.Flags().Bool("fullscreen", false, "")
	rootCmd.Flags().String("gamma", "", "")
	rootCmd.Flags().Bool("gamma-auto", false, "")
	rootCmd.Flags().String("gamma-factor", "", "")
	rootCmd.Flags().Bool("gamut-clipping", false, "")
	rootCmd.Flags().Bool("gamut-warning", false, "")
	rootCmd.Flags().String("gapless-audio", "", "")
	rootCmd.Flags().String("geometry", "", "")
	rootCmd.Flags().String("glsl-shader", "", "")
	rootCmd.Flags().String("glsl-shaders", "", "")
	rootCmd.Flags().String("glsl-shaders-add", "", "")
	rootCmd.Flags().String("glsl-shaders-append", "", "")
	rootCmd.Flags().String("glsl-shaders-clr", "", "")
	rootCmd.Flags().String("glsl-shaders-del", "", "")
	rootCmd.Flags().String("glsl-shaders-pre", "", "")
	rootCmd.Flags().String("glsl-shaders-remove", "", "")
	rootCmd.Flags().String("glsl-shaders-set", "", "")
	rootCmd.Flags().String("glsl-shaders-toggle", "", "")
	rootCmd.Flags().String("gpu-api", "", "")
	rootCmd.Flags().String("gpu-context", "", "")
	rootCmd.Flags().Bool("gpu-debug", false, "")
	rootCmd.Flags().String("gpu-dumb-mode", "", "")
	rootCmd.Flags().String("gpu-hwdec-interop", "", "")
	rootCmd.Flags().String("gpu-shader-cache-dir", "", "")
	rootCmd.Flags().Bool("gpu-sw", false, "")
	rootCmd.Flags().String("gpu-tex-pad-x", "", "")
	rootCmd.Flags().String("gpu-tex-pad-y", "", "")
	rootCmd.Flags().String("h", "", "")
	rootCmd.Flags().String("hdr-compute-peak", "", "")
	rootCmd.Flags().String("hdr-peak-decay-rate", "", "")
	rootCmd.Flags().String("hdr-scene-threshold-high", "", "")
	rootCmd.Flags().String("hdr-scene-threshold-low", "", "")
	rootCmd.Flags().String("help", "", "")
	rootCmd.Flags().Bool("hidpi-window-scale", false, "")
	rootCmd.Flags().String("hls-bitrate", "", "")
	rootCmd.Flags().String("hr-seek", "", "")
	rootCmd.Flags().String("hr-seek-demuxer-offset", "", "")
	rootCmd.Flags().Bool("hr-seek-framedrop", false, "")
	rootCmd.Flags().String("http-header-fields", "", "")
	rootCmd.Flags().String("http-header-fields-add", "", "")
	rootCmd.Flags().String("http-header-fields-append", "", "")
	rootCmd.Flags().String("http-header-fields-clr", "", "")
	rootCmd.Flags().String("http-header-fields-del", "", "")
	rootCmd.Flags().String("http-header-fields-pre", "", "")
	rootCmd.Flags().String("http-header-fields-remove", "", "")
	rootCmd.Flags().String("http-header-fields-set", "", "")
	rootCmd.Flags().String("http-header-fields-toggle", "", "")
	rootCmd.Flags().String("http-proxy", "", "")
	rootCmd.Flags().String("hue", "", "")
	rootCmd.Flags().String("hwdec", "", "")
	rootCmd.Flags().String("hwdec-codecs", "", "")
	rootCmd.Flags().String("hwdec-extra-frames", "", "")
	rootCmd.Flags().String("hwdec-image-format", "", "")
	rootCmd.Flags().String("icc-3dlut-size", "", "")
	rootCmd.Flags().String("icc-cache-dir", "", "")
	rootCmd.Flags().String("icc-force-contrast", "", "")
	rootCmd.Flags().String("icc-intent", "", "")
	rootCmd.Flags().String("icc-profile", "", "")
	rootCmd.Flags().Bool("icc-profile-auto", false, "")
	rootCmd.Flags().String("idle", "", "")
	rootCmd.Flags().Bool("ignore-path-in-watch-later-config", false, "")
	rootCmd.Flags().String("image-display-duration", "", "")
	rootCmd.Flags().Bool("image-subs-video-resolution", false, "")
	rootCmd.Flags().String("include", "", "")
	rootCmd.Flags().String("index", "", "")
	rootCmd.Flags().Bool("initial-audio-sync", false, "")
	rootCmd.Flags().String("input-ar-delay", "", "")
	rootCmd.Flags().String("input-ar-rate", "", "")
	rootCmd.Flags().Bool("input-builtin-bindings", false, "")
	rootCmd.Flags().String("input-conf", "", "")
	rootCmd.Flags().Bool("input-cursor", false, "")
	rootCmd.Flags().Bool("input-default-bindings", false, "")
	rootCmd.Flags().String("input-doubleclick-time", "", "")
	rootCmd.Flags().String("input-ipc-client", "", "")
	rootCmd.Flags().String("input-ipc-server", "", "")
	rootCmd.Flags().String("input-key-fifo-size", "", "")
	rootCmd.Flags().String("input-keylist", "", "")
	rootCmd.Flags().Bool("input-media-keys", false, "")
	rootCmd.Flags().Bool("input-right-alt-gr", false, "")
	rootCmd.Flags().Bool("input-terminal", false, "")
	rootCmd.Flags().Bool("input-test", false, "")
	rootCmd.Flags().Bool("input-vo-keyboard", false, "")
	rootCmd.Flags().String("inputrootCmdlist", "", "")
	rootCmd.Flags().Bool("interpolation", false, "")
	rootCmd.Flags().String("interpolation-threshold", "", "")
	rootCmd.Flags().Bool("jack-autostart", false, "")
	rootCmd.Flags().Bool("jack-connect", false, "")
	rootCmd.Flags().String("jack-name", "", "")
	rootCmd.Flags().String("jack-port", "", "")
	rootCmd.Flags().String("jack-std-channel-layout", "", "")
	rootCmd.Flags().String("keep-open", "", "")
	rootCmd.Flags().Bool("keep-open-pause", false, "")
	rootCmd.Flags().Bool("keepaspect", false, "")
	rootCmd.Flags().Bool("keepaspect-window", false, "")
	rootCmd.Flags().String("lavfi-complex", "", "")
	rootCmd.Flags().String("length", "", "")
	rootCmd.Flags().Bool("linear-downscaling", false, "")
	rootCmd.Flags().Bool("linear-upscaling", false, "")
	rootCmd.Flags().Bool("list-options", false, "list all mpv options")
	rootCmd.Flags().Bool("list-properties", false, "")
	rootCmd.Flags().String("list-protocols", "", "")
	rootCmd.Flags().String("load-auto-profiles", "", "")
	rootCmd.Flags().Bool("load-osd-console", false, "")
	rootCmd.Flags().Bool("load-scripts", false, "")
	rootCmd.Flags().Bool("load-stats-overlay", false, "")
	rootCmd.Flags().Bool("load-unsafe-playlists", false, "")
	rootCmd.Flags().String("log-file", "", "")
	rootCmd.Flags().String("loop", "", "")
	rootCmd.Flags().String("loop-file", "", "")
	rootCmd.Flags().String("loop-playlist", "", "")
	rootCmd.Flags().String("mc", "", "")
	rootCmd.Flags().Bool("merge-files", false, "")
	rootCmd.Flags().String("metadata-codepage", "", "")
	rootCmd.Flags().String("mf-fps", "", "")
	rootCmd.Flags().String("mf-type", "", "")
	rootCmd.Flags().String("monitoraspect", "", "")
	rootCmd.Flags().String("monitorpixelaspect", "", "")
	rootCmd.Flags().Bool("msg-color", false, "")
	rootCmd.Flags().String("msg-level", "", "")
	rootCmd.Flags().Bool("msg-module", false, "")
	rootCmd.Flags().Bool("msg-time", false, "")
	rootCmd.Flags().String("mute", "", "")
	rootCmd.Flags().Bool("native-fs", false, "")
	rootCmd.Flags().Bool("native-keyrepeat", false, "")
	rootCmd.Flags().String("network-timeout", "", "")
	rootCmd.Flags().Bool("no-audio", false, "do not play sound")
	rootCmd.Flags().Bool("no-video", false, "do not play video")
	rootCmd.Flags().String("o", "", "")
	rootCmd.Flags().String("oac", "", "")
	rootCmd.Flags().String("oacopts", "", "")
	rootCmd.Flags().String("oacopts-add", "", "")
	rootCmd.Flags().String("oacopts-append", "", "")
	rootCmd.Flags().String("oacopts-remove", "", "")
	rootCmd.Flags().String("oacopts-set", "", "")
	rootCmd.Flags().Bool("ocopy-metadata", false, "")
	rootCmd.Flags().String("of", "", "")
	rootCmd.Flags().String("ofopts", "", "")
	rootCmd.Flags().String("ofopts-add", "", "")
	rootCmd.Flags().String("ofopts-append", "", "")
	rootCmd.Flags().String("ofopts-remove", "", "")
	rootCmd.Flags().String("ofopts-set", "", "")
	rootCmd.Flags().Bool("on-all-workspaces", false, "")
	rootCmd.Flags().Bool("ontop", false, "")
	rootCmd.Flags().String("ontop-level", "", "")
	rootCmd.Flags().String("opengl-check-pattern-a", "", "")
	rootCmd.Flags().String("opengl-check-pattern-b", "", "")
	rootCmd.Flags().String("opengl-early-flush", "", "")
	rootCmd.Flags().String("opengl-es", "", "")
	rootCmd.Flags().Bool("opengl-glfinish", false, "")
	rootCmd.Flags().Bool("opengl-pbo", false, "")
	rootCmd.Flags().Bool("opengl-rectangle-textures", false, "")
	rootCmd.Flags().String("opengl-swapinterval", "", "")
	rootCmd.Flags().Bool("opengl-waitvsync", false, "")
	rootCmd.Flags().Bool("orawts", false, "")
	rootCmd.Flags().Bool("ordered-chapters", false, "")
	rootCmd.Flags().String("ordered-chapters-files", "", "")
	rootCmd.Flags().String("oremove-metadata", "", "")
	rootCmd.Flags().String("oremove-metadata-add", "", "")
	rootCmd.Flags().String("oremove-metadata-append", "", "")
	rootCmd.Flags().String("oremove-metadata-clr", "", "")
	rootCmd.Flags().String("oremove-metadata-del", "", "")
	rootCmd.Flags().String("oremove-metadata-pre", "", "")
	rootCmd.Flags().String("oremove-metadata-remove", "", "")
	rootCmd.Flags().String("oremove-metadata-set", "", "")
	rootCmd.Flags().String("oremove-metadata-toggle", "", "")
	rootCmd.Flags().Bool("osc", false, "")
	rootCmd.Flags().String("osd-align-x", "", "")
	rootCmd.Flags().String("osd-align-y", "", "")
	rootCmd.Flags().String("osd-back-color", "", "")
	rootCmd.Flags().Bool("osd-bar", false, "")
	rootCmd.Flags().String("osd-bar-align-x", "", "")
	rootCmd.Flags().String("osd-bar-align-y", "", "")
	rootCmd.Flags().String("osd-bar-h", "", "")
	rootCmd.Flags().String("osd-bar-w", "", "")
	rootCmd.Flags().String("osd-blur", "", "")
	rootCmd.Flags().Bool("osd-bold", false, "")
	rootCmd.Flags().String("osd-border-color", "", "")
	rootCmd.Flags().String("osd-border-size", "", "")
	rootCmd.Flags().String("osd-color", "", "")
	rootCmd.Flags().String("osd-duration", "", "")
	rootCmd.Flags().String("osd-font", "", "")
	rootCmd.Flags().String("osd-font-provider", "", "")
	rootCmd.Flags().String("osd-font-size", "", "")
	rootCmd.Flags().Bool("osd-fractions", false, "")
	rootCmd.Flags().Bool("osd-italic", false, "")
	rootCmd.Flags().String("osd-justify", "", "")
	rootCmd.Flags().String("osd-level", "", "")
	rootCmd.Flags().String("osd-margin-x", "", "")
	rootCmd.Flags().String("osd-margin-y", "", "")
	rootCmd.Flags().String("osd-msg1", "", "")
	rootCmd.Flags().String("osd-msg2", "", "")
	rootCmd.Flags().String("osd-msg3", "", "")
	rootCmd.Flags().String("osd-on-seek", "", "")
	rootCmd.Flags().String("osd-playing-msg", "", "")
	rootCmd.Flags().String("osd-scale", "", "")
	rootCmd.Flags().Bool("osd-scale-by-window", false, "")
	rootCmd.Flags().String("osd-shadow-color", "", "")
	rootCmd.Flags().String("osd-shadow-offset", "", "")
	rootCmd.Flags().String("osd-spacing", "", "")
	rootCmd.Flags().String("osd-status-msg", "", "")
	rootCmd.Flags().String("oset-metadata", "", "")
	rootCmd.Flags().String("oset-metadata-add", "", "")
	rootCmd.Flags().String("oset-metadata-append", "", "")
	rootCmd.Flags().String("oset-metadata-remove", "", "")
	rootCmd.Flags().String("oset-metadata-set", "", "")
	rootCmd.Flags().String("ovc", "", "")
	rootCmd.Flags().String("ovcopts", "", "")
	rootCmd.Flags().String("ovcopts-add", "", "")
	rootCmd.Flags().String("ovcopts-append", "", "")
	rootCmd.Flags().String("ovcopts-remove", "", "")
	rootCmd.Flags().String("ovcopts-set", "", "")
	rootCmd.Flags().String("override-display-fps", "", "")
	rootCmd.Flags().String("panscan", "", "")
	rootCmd.Flags().Bool("pause", false, "")
	rootCmd.Flags().String("play-dir", "", "")
	rootCmd.Flags().String("player-operation-mode", "", "")
	rootCmd.Flags().String("playlist", "", "specify playlist file")
	rootCmd.Flags().String("playlist-start", "", "")
	rootCmd.Flags().Bool("prefetch-playlist", false, "")
	rootCmd.Flags().String("profile", "", "")
	rootCmd.Flags().String("profile-add", "", "")
	rootCmd.Flags().String("profile-append", "", "")
	rootCmd.Flags().String("profile-clr", "", "")
	rootCmd.Flags().String("profile-del", "", "")
	rootCmd.Flags().String("profile-pre", "", "")
	rootCmd.Flags().String("profile-remove", "", "")
	rootCmd.Flags().String("profile-set", "", "")
	rootCmd.Flags().String("profile-toggle", "", "")
	rootCmd.Flags().Bool("pulse-allow-suspended", false, "")
	rootCmd.Flags().String("pulse-buffer", "", "")
	rootCmd.Flags().String("pulse-host", "", "")
	rootCmd.Flags().Bool("pulse-latency-hacks", false, "")
	rootCmd.Flags().Bool("quiet", false, "")
	rootCmd.Flags().Bool("rar-list-all-volumes", false, "")
	rootCmd.Flags().Bool("really-quiet", false, "")
	rootCmd.Flags().Bool("rebase-start-time", false, "")
	rootCmd.Flags().String("referrer", "", "")
	rootCmd.Flags().String("replaygain", "", "")
	rootCmd.Flags().Bool("replaygain-clip", false, "")
	rootCmd.Flags().String("replaygain-fallback", "", "")
	rootCmd.Flags().String("replaygain-preamp", "", "")
	rootCmd.Flags().String("reset-on-next-file", "", "")
	rootCmd.Flags().String("reset-on-next-file-add", "", "")
	rootCmd.Flags().String("reset-on-next-file-append", "", "")
	rootCmd.Flags().String("reset-on-next-file-clr", "", "")
	rootCmd.Flags().String("reset-on-next-file-del", "", "")
	rootCmd.Flags().String("reset-on-next-file-pre", "", "")
	rootCmd.Flags().String("reset-on-next-file-remove", "", "")
	rootCmd.Flags().String("reset-on-next-file-set", "", "")
	rootCmd.Flags().String("reset-on-next-file-toggle", "", "")
	rootCmd.Flags().Bool("resume-playback", false, "")
	rootCmd.Flags().Bool("resume-playback-check-mtime", false, "")
	rootCmd.Flags().String("rtsp-transport", "", "")
	rootCmd.Flags().String("saturation", "", "")
	rootCmd.Flags().Bool("save-position-on-quit", false, "")
	rootCmd.Flags().String("scale", "", "")
	rootCmd.Flags().String("scale-antiring", "", "")
	rootCmd.Flags().String("scale-blur", "", "")
	rootCmd.Flags().String("scale-clamp", "", "")
	rootCmd.Flags().String("scale-cutoff", "", "")
	rootCmd.Flags().String("scale-param1", "", "")
	rootCmd.Flags().String("scale-param2", "", "")
	rootCmd.Flags().String("scale-radius", "", "")
	rootCmd.Flags().String("scale-taper", "", "")
	rootCmd.Flags().String("scale-wblur", "", "")
	rootCmd.Flags().String("scale-window", "", "")
	rootCmd.Flags().String("scale-wparam", "", "")
	rootCmd.Flags().String("scale-wtaper", "", "")
	rootCmd.Flags().String("scaler-lut-size", "", "")
	rootCmd.Flags().Bool("scaler-resizes-only", false, "")
	rootCmd.Flags().String("screen", "", "")
	rootCmd.Flags().String("screen-name", "", "")
	rootCmd.Flags().String("screenshot-directory", "", "")
	rootCmd.Flags().String("screenshot-format", "", "")
	rootCmd.Flags().Bool("screenshot-high-bit-depth", false, "")
	rootCmd.Flags().String("screenshot-jpeg-quality", "", "")
	rootCmd.Flags().Bool("screenshot-jpeg-source-chroma", false, "")
	rootCmd.Flags().String("screenshot-png-compression", "", "")
	rootCmd.Flags().String("screenshot-png-filter", "", "")
	rootCmd.Flags().Bool("screenshot-sw", false, "")
	rootCmd.Flags().Bool("screenshot-tag-colorspace", false, "")
	rootCmd.Flags().String("screenshot-template", "", "")
	rootCmd.Flags().String("screenshot-webp-compression", "", "")
	rootCmd.Flags().Bool("screenshot-webp-lossless", false, "")
	rootCmd.Flags().String("screenshot-webp-quality", "", "")
	rootCmd.Flags().String("script", "", "")
	rootCmd.Flags().String("script-opts", "", "")
	rootCmd.Flags().String("script-opts-add", "", "")
	rootCmd.Flags().String("script-opts-append", "", "")
	rootCmd.Flags().String("script-opts-remove", "", "")
	rootCmd.Flags().String("script-opts-set", "", "")
	rootCmd.Flags().String("scripts", "", "")
	rootCmd.Flags().String("scripts-add", "", "")
	rootCmd.Flags().String("scripts-append", "", "")
	rootCmd.Flags().String("scripts-clr", "", "")
	rootCmd.Flags().String("scripts-del", "", "")
	rootCmd.Flags().String("scripts-pre", "", "")
	rootCmd.Flags().String("scripts-remove", "", "")
	rootCmd.Flags().String("scripts-set", "", "")
	rootCmd.Flags().String("scripts-toggle", "", "")
	rootCmd.Flags().String("secondary-sid", "", "")
	rootCmd.Flags().Bool("secondary-sub-visibility", false, "")
	rootCmd.Flags().String("sharpen", "", "")
	rootCmd.Flags().String("show-profile", "", "")
	rootCmd.Flags().Bool("shuffle", false, "")
	rootCmd.Flags().String("sid", "", "")
	rootCmd.Flags().String("sigmoid-center", "", "")
	rootCmd.Flags().String("sigmoid-slope", "", "")
	rootCmd.Flags().Bool("sigmoid-upscaling", false, "")
	rootCmd.Flags().String("slang", "", "")
	rootCmd.Flags().String("slang-add", "", "")
	rootCmd.Flags().String("slang-append", "", "")
	rootCmd.Flags().String("slang-clr", "", "")
	rootCmd.Flags().String("slang-del", "", "")
	rootCmd.Flags().String("slang-pre", "", "")
	rootCmd.Flags().String("slang-remove", "", "")
	rootCmd.Flags().String("slang-set", "", "")
	rootCmd.Flags().String("slang-toggle", "", "")
	rootCmd.Flags().Bool("snap-window", false, "")
	rootCmd.Flags().String("speed", "", "")
	rootCmd.Flags().String("spirv-compiler", "", "")
	rootCmd.Flags().String("sstep", "", "")
	rootCmd.Flags().String("start", "", "seek to given (percent, seconds, or hh:mm:ss) position")
	rootCmd.Flags().Bool("stop-playback-on-init-failure", false, "")
	rootCmd.Flags().Bool("stop-screensaver", false, "")
	rootCmd.Flags().String("stream-buffer-size", "", "")
	rootCmd.Flags().String("stream-dump", "", "")
	rootCmd.Flags().String("stream-lavf-o", "", "")
	rootCmd.Flags().String("stream-lavf-o-add", "", "")
	rootCmd.Flags().String("stream-lavf-o-append", "", "")
	rootCmd.Flags().String("stream-lavf-o-remove", "", "")
	rootCmd.Flags().String("stream-lavf-o-set", "", "")
	rootCmd.Flags().String("stream-record", "", "")
	rootCmd.Flags().Bool("stretch-dvd-subs", false, "")
	rootCmd.Flags().Bool("stretch-image-subs-to-screen", false, "")
	rootCmd.Flags().String("sub", "", "")
	rootCmd.Flags().String("sub-align-x", "", "")
	rootCmd.Flags().String("sub-align-y", "", "")
	rootCmd.Flags().Bool("sub-ass", false, "")
	rootCmd.Flags().Bool("sub-ass-force-margins", false, "")
	rootCmd.Flags().String("sub-ass-force-style", "", "")
	rootCmd.Flags().String("sub-ass-force-style-add", "", "")
	rootCmd.Flags().String("sub-ass-force-style-append", "", "")
	rootCmd.Flags().String("sub-ass-force-style-clr", "", "")
	rootCmd.Flags().String("sub-ass-force-style-del", "", "")
	rootCmd.Flags().String("sub-ass-force-style-pre", "", "")
	rootCmd.Flags().String("sub-ass-force-style-remove", "", "")
	rootCmd.Flags().String("sub-ass-force-style-set", "", "")
	rootCmd.Flags().String("sub-ass-force-style-toggle", "", "")
	rootCmd.Flags().String("sub-ass-hinting", "", "")
	rootCmd.Flags().Bool("sub-ass-justify", false, "")
	rootCmd.Flags().String("sub-ass-line-spacing", "", "")
	rootCmd.Flags().String("sub-ass-override", "", "")
	rootCmd.Flags().Bool("sub-ass-scale-with-window", false, "")
	rootCmd.Flags().String("sub-ass-shaper", "", "")
	rootCmd.Flags().String("sub-ass-styles", "", "")
	rootCmd.Flags().Bool("sub-ass-vsfilter-aspect-compat", false, "")
	rootCmd.Flags().Bool("sub-ass-vsfilter-blur-compat", false, "")
	rootCmd.Flags().String("sub-ass-vsfilter-color-compat", "", "")
	rootCmd.Flags().String("sub-auto", "", "")
	rootCmd.Flags().String("sub-back-color", "", "")
	rootCmd.Flags().String("sub-blur", "", "")
	rootCmd.Flags().Bool("sub-bold", false, "")
	rootCmd.Flags().String("sub-border-color", "", "")
	rootCmd.Flags().String("sub-border-size", "", "")
	rootCmd.Flags().Bool("sub-clear-on-seek", false, "")
	rootCmd.Flags().String("sub-codepage", "", "")
	rootCmd.Flags().String("sub-color", "", "")
	rootCmd.Flags().Bool("sub-create-cc-track", false, "")
	rootCmd.Flags().String("sub-delay", "", "")
	rootCmd.Flags().String("sub-demuxer", "", "")
	rootCmd.Flags().String("sub-file", "", "specify subtitle file to use")
	rootCmd.Flags().String("sub-file-paths", "", "")
	rootCmd.Flags().String("sub-file-paths-add", "", "")
	rootCmd.Flags().String("sub-file-paths-append", "", "")
	rootCmd.Flags().String("sub-file-paths-clr", "", "")
	rootCmd.Flags().String("sub-file-paths-del", "", "")
	rootCmd.Flags().String("sub-file-paths-pre", "", "")
	rootCmd.Flags().String("sub-file-paths-remove", "", "")
	rootCmd.Flags().String("sub-file-paths-set", "", "")
	rootCmd.Flags().String("sub-file-paths-toggle", "", "")
	rootCmd.Flags().String("sub-files", "", "")
	rootCmd.Flags().String("sub-files-add", "", "")
	rootCmd.Flags().String("sub-files-append", "", "")
	rootCmd.Flags().String("sub-files-clr", "", "")
	rootCmd.Flags().String("sub-files-del", "", "")
	rootCmd.Flags().String("sub-files-pre", "", "")
	rootCmd.Flags().String("sub-files-remove", "", "")
	rootCmd.Flags().String("sub-files-set", "", "")
	rootCmd.Flags().String("sub-files-toggle", "", "")
	rootCmd.Flags().String("sub-filter-jsre", "", "")
	rootCmd.Flags().String("sub-filter-jsre-add", "", "")
	rootCmd.Flags().String("sub-filter-jsre-append", "", "")
	rootCmd.Flags().String("sub-filter-jsre-clr", "", "")
	rootCmd.Flags().String("sub-filter-jsre-del", "", "")
	rootCmd.Flags().String("sub-filter-jsre-pre", "", "")
	rootCmd.Flags().String("sub-filter-jsre-remove", "", "")
	rootCmd.Flags().String("sub-filter-jsre-set", "", "")
	rootCmd.Flags().String("sub-filter-jsre-toggle", "", "")
	rootCmd.Flags().String("sub-filter-regex", "", "")
	rootCmd.Flags().String("sub-filter-regex-add", "", "")
	rootCmd.Flags().String("sub-filter-regex-append", "", "")
	rootCmd.Flags().String("sub-filter-regex-clr", "", "")
	rootCmd.Flags().String("sub-filter-regex-del", "", "")
	rootCmd.Flags().Bool("sub-filter-regex-enable", false, "")
	rootCmd.Flags().Bool("sub-filter-regex-plain", false, "")
	rootCmd.Flags().String("sub-filter-regex-pre", "", "")
	rootCmd.Flags().String("sub-filter-regex-remove", "", "")
	rootCmd.Flags().String("sub-filter-regex-set", "", "")
	rootCmd.Flags().String("sub-filter-regex-toggle", "", "")
	rootCmd.Flags().Bool("sub-filter-regex-warn", false, "")
	rootCmd.Flags().Bool("sub-filter-sdh", false, "")
	rootCmd.Flags().Bool("sub-filter-sdh-harder", false, "")
	rootCmd.Flags().Bool("sub-fix-timing", false, "")
	rootCmd.Flags().String("sub-font", "", "")
	rootCmd.Flags().String("sub-font-provider", "", "")
	rootCmd.Flags().String("sub-font-size", "", "")
	rootCmd.Flags().String("sub-forced-only", "", "")
	rootCmd.Flags().String("sub-fps", "", "")
	rootCmd.Flags().String("sub-gauss", "", "")
	rootCmd.Flags().Bool("sub-gray", false, "")
	rootCmd.Flags().Bool("sub-italic", false, "")
	rootCmd.Flags().String("sub-justify", "", "")
	rootCmd.Flags().String("sub-margin-x", "", "")
	rootCmd.Flags().String("sub-margin-y", "", "")
	rootCmd.Flags().Bool("sub-past-video-end", false, "")
	rootCmd.Flags().String("sub-pos", "", "")
	rootCmd.Flags().String("sub-scale", "", "")
	rootCmd.Flags().Bool("sub-scale-by-window", false, "")
	rootCmd.Flags().Bool("sub-scale-with-window", false, "")
	rootCmd.Flags().String("sub-shadow-color", "", "")
	rootCmd.Flags().String("sub-shadow-offset", "", "")
	rootCmd.Flags().String("sub-spacing", "", "")
	rootCmd.Flags().String("sub-speed", "", "")
	rootCmd.Flags().Bool("sub-use-margins", false, "")
	rootCmd.Flags().Bool("sub-visibility", false, "")
	rootCmd.Flags().Bool("subs-with-matching-audio", false, "")
	rootCmd.Flags().String("swapchain-depth", "", "")
	rootCmd.Flags().Bool("sws-allow-zimg", false, "")
	rootCmd.Flags().Bool("sws-bitexact", false, "")
	rootCmd.Flags().String("sws-cgb", "", "")
	rootCmd.Flags().String("sws-chs", "", "")
	rootCmd.Flags().String("sws-cs", "", "")
	rootCmd.Flags().String("sws-cvs", "", "")
	rootCmd.Flags().Bool("sws-fast", false, "")
	rootCmd.Flags().String("sws-lgb", "", "")
	rootCmd.Flags().String("sws-ls", "", "")
	rootCmd.Flags().String("sws-scaler", "", "")
	rootCmd.Flags().String("target-peak", "", "")
	rootCmd.Flags().String("target-prim", "", "")
	rootCmd.Flags().String("target-trc", "", "")
	rootCmd.Flags().Bool("taskbar-progress", false, "")
	rootCmd.Flags().String("teletext-page", "", "")
	rootCmd.Flags().Bool("temporal-dither", false, "")
	rootCmd.Flags().String("temporal-dither-period", "", "")
	rootCmd.Flags().String("term-osd", "", "")
	rootCmd.Flags().Bool("term-osd-bar", false, "")
	rootCmd.Flags().String("term-osd-bar-chars", "", "")
	rootCmd.Flags().String("term-playing-msg", "", "")
	rootCmd.Flags().String("term-status-msg", "", "")
	rootCmd.Flags().String("term-title", "", "")
	rootCmd.Flags().Bool("terminal", false, "")
	rootCmd.Flags().String("title", "", "")
	rootCmd.Flags().String("tls-ca-file", "", "")
	rootCmd.Flags().String("tls-cert-file", "", "")
	rootCmd.Flags().String("tls-key-file", "", "")
	rootCmd.Flags().Bool("tls-verify", false, "")
	rootCmd.Flags().String("tone-mapping", "", "")
	rootCmd.Flags().String("tone-mapping-desaturate", "", "")
	rootCmd.Flags().String("tone-mapping-desaturate-exponent", "", "")
	rootCmd.Flags().String("tone-mapping-max-boost", "", "")
	rootCmd.Flags().String("tone-mapping-param", "", "")
	rootCmd.Flags().Bool("track-auto-selection", false, "")
	rootCmd.Flags().String("tscale", "", "")
	rootCmd.Flags().String("tscale-antiring", "", "")
	rootCmd.Flags().String("tscale-blur", "", "")
	rootCmd.Flags().String("tscale-clamp", "", "")
	rootCmd.Flags().String("tscale-cutoff", "", "")
	rootCmd.Flags().String("tscale-param1", "", "")
	rootCmd.Flags().String("tscale-param2", "", "")
	rootCmd.Flags().String("tscale-radius", "", "")
	rootCmd.Flags().String("tscale-taper", "", "")
	rootCmd.Flags().String("tscale-wblur", "", "")
	rootCmd.Flags().String("tscale-window", "", "")
	rootCmd.Flags().String("tscale-wparam", "", "")
	rootCmd.Flags().String("tscale-wtaper", "", "")
	rootCmd.Flags().Bool("untimed", false, "")
	rootCmd.Flags().Bool("use-embedded-icc-profile", false, "")
	rootCmd.Flags().Bool("use-filedir-conf", false, "")
	rootCmd.Flags().String("user-agent", "", "")
	rootCmd.Flags().Bool("v", false, "")
	rootCmd.Flags().String("vaapi-device", "", "")
	rootCmd.Flags().String("vd", "", "Specify a priority list of video decoders to be used")
	rootCmd.Flags().Bool("vd-lavc-assume-old-x264", false, "")
	rootCmd.Flags().Bool("vd-lavc-bitexact", false, "")
	rootCmd.Flags().Bool("vd-lavc-check-hw-profile", false, "")
	rootCmd.Flags().Bool("vd-lavc-dr", false, "")
	rootCmd.Flags().Bool("vd-lavc-fast", false, "")
	rootCmd.Flags().String("vd-lavc-framedrop", "", "")
	rootCmd.Flags().String("vd-lavc-o", "", "")
	rootCmd.Flags().String("vd-lavc-o-add", "", "")
	rootCmd.Flags().String("vd-lavc-o-append", "", "")
	rootCmd.Flags().String("vd-lavc-o-remove", "", "")
	rootCmd.Flags().String("vd-lavc-o-set", "", "")
	rootCmd.Flags().Bool("vd-lavc-show-all", false, "")
	rootCmd.Flags().String("vd-lavc-skipframe", "", "")
	rootCmd.Flags().String("vd-lavc-skipidct", "", "")
	rootCmd.Flags().String("vd-lavc-skiploopfilter", "", "")
	rootCmd.Flags().String("vd-lavc-software-fallback", "", "")
	rootCmd.Flags().String("vd-lavc-threads", "", "")
	rootCmd.Flags().Bool("vd-queue-enable", false, "")
	rootCmd.Flags().String("vd-queue-max-bytes", "", "")
	rootCmd.Flags().String("vd-queue-max-samples", "", "")
	rootCmd.Flags().String("vd-queue-max-secs", "", "")
	rootCmd.Flags().StringP("version", "V", "", "Print version string and exit")
	rootCmd.Flags().String("vf", "", "Setup a chain of video filters")
	rootCmd.Flags().String("vf-add", "", "")
	rootCmd.Flags().String("vf-append", "", "")
	rootCmd.Flags().String("vf-clr", "", "")
	rootCmd.Flags().String("vf-defaults-add", "", "")
	rootCmd.Flags().String("vf-defaults-append", "", "")
	rootCmd.Flags().String("vf-defaults-clr", "", "")
	rootCmd.Flags().String("vf-defaults-del", "", "")
	rootCmd.Flags().String("vf-defaults-help", "", "")
	rootCmd.Flags().String("vf-defaults-pre", "", "")
	rootCmd.Flags().String("vf-defaults-remove", "", "")
	rootCmd.Flags().String("vf-defaults-set", "", "")
	rootCmd.Flags().String("vf-defaults-toggle", "", "")
	rootCmd.Flags().String("vf-del", "", "")
	rootCmd.Flags().String("vf-help", "", "")
	rootCmd.Flags().String("vf-pre", "", "")
	rootCmd.Flags().String("vf-remove", "", "")
	rootCmd.Flags().String("vf-set", "", "")
	rootCmd.Flags().String("vf-toggle", "", "")
	rootCmd.Flags().String("vid", "", "")
	rootCmd.Flags().String("video", "", "")
	rootCmd.Flags().String("video-align-x", "", "")
	rootCmd.Flags().String("video-align-y", "", "")
	rootCmd.Flags().String("video-aspect-method", "", "")
	rootCmd.Flags().String("video-aspect-override", "", "")
	rootCmd.Flags().String("video-backward-batch", "", "")
	rootCmd.Flags().String("video-backward-overlap", "", "")
	rootCmd.Flags().Bool("video-latency-hacks", false, "")
	rootCmd.Flags().String("video-margin-ratio-bottom", "", "")
	rootCmd.Flags().String("video-margin-ratio-left", "", "")
	rootCmd.Flags().String("video-margin-ratio-right", "", "")
	rootCmd.Flags().String("video-margin-ratio-top", "", "")
	rootCmd.Flags().Bool("video-osd", false, "")
	rootCmd.Flags().String("video-output-levels", "", "")
	rootCmd.Flags().String("video-pan-x", "", "")
	rootCmd.Flags().String("video-pan-y", "", "")
	rootCmd.Flags().String("video-reversal-buffer", "", "")
	rootCmd.Flags().String("video-rotate", "", "")
	rootCmd.Flags().String("video-scale-x", "", "")
	rootCmd.Flags().String("video-scale-y", "", "")
	rootCmd.Flags().String("video-sync", "", "")
	rootCmd.Flags().String("video-sync-max-audio-change", "", "")
	rootCmd.Flags().String("video-sync-max-factor", "", "")
	rootCmd.Flags().String("video-sync-max-video-change", "", "")
	rootCmd.Flags().String("video-timing-offset", "", "")
	rootCmd.Flags().String("video-unscaled", "", "")
	rootCmd.Flags().String("video-zoom", "", "")
	rootCmd.Flags().String("vlang", "", "")
	rootCmd.Flags().String("vlang-add", "", "")
	rootCmd.Flags().String("vlang-append", "", "")
	rootCmd.Flags().String("vlang-clr", "", "")
	rootCmd.Flags().String("vlang-del", "", "")
	rootCmd.Flags().String("vlang-pre", "", "")
	rootCmd.Flags().String("vlang-remove", "", "")
	rootCmd.Flags().String("vlang-set", "", "")
	rootCmd.Flags().String("vlang-toggle", "", "")
	rootCmd.Flags().String("vo", "", "")
	rootCmd.Flags().String("vo-add", "", "")
	rootCmd.Flags().String("vo-append", "", "")
	rootCmd.Flags().String("vo-clr", "", "")
	rootCmd.Flags().String("vo-del", "", "")
	rootCmd.Flags().String("vo-help", "", "")
	rootCmd.Flags().String("vo-image-format", "", "")
	rootCmd.Flags().Bool("vo-image-high-bit-depth", false, "")
	rootCmd.Flags().String("vo-image-jpeg-quality", "", "")
	rootCmd.Flags().Bool("vo-image-jpeg-source-chroma", false, "")
	rootCmd.Flags().String("vo-image-outdir", "", "")
	rootCmd.Flags().String("vo-image-png-compression", "", "")
	rootCmd.Flags().String("vo-image-png-filter", "", "")
	rootCmd.Flags().Bool("vo-image-tag-colorspace", false, "")
	rootCmd.Flags().String("vo-image-webp-compression", "", "")
	rootCmd.Flags().Bool("vo-image-webp-lossless", false, "")
	rootCmd.Flags().String("vo-image-webp-quality", "", "")
	rootCmd.Flags().String("vo-null-fps", "", "")
	rootCmd.Flags().String("vo-pre", "", "")
	rootCmd.Flags().String("vo-remove", "", "")
	rootCmd.Flags().String("vo-set", "", "")
	rootCmd.Flags().Bool("vo-tct-256", false, "")
	rootCmd.Flags().String("vo-tct-algo", "", "")
	rootCmd.Flags().String("vo-tct-height", "", "")
	rootCmd.Flags().String("vo-tct-width", "", "")
	rootCmd.Flags().String("vo-toggle", "", "")
	rootCmd.Flags().Bool("vo-vaapi-scaled-osd", false, "")
	rootCmd.Flags().String("vo-vaapi-scaling", "", "")
	rootCmd.Flags().Bool("vo-vdpau-chroma-deint", false, "")
	rootCmd.Flags().String("vo-vdpau-colorkey", "", "")
	rootCmd.Flags().Bool("vo-vdpau-composite-detect", false, "")
	rootCmd.Flags().String("vo-vdpau-denoise", "", "")
	rootCmd.Flags().Bool("vo-vdpau-force-yuv", false, "")
	rootCmd.Flags().String("vo-vdpau-fps", "", "")
	rootCmd.Flags().String("vo-vdpau-hqscaling", "", "")
	rootCmd.Flags().String("vo-vdpau-output-surfaces", "", "")
	rootCmd.Flags().Bool("vo-vdpau-pullup", false, "")
	rootCmd.Flags().String("vo-vdpau-queuetime-fs", "", "")
	rootCmd.Flags().String("vo-vdpau-queuetime-windowed", "", "")
	rootCmd.Flags().String("vo-vdpau-sharpen", "", "")
	rootCmd.Flags().String("volume", "", "")
	rootCmd.Flags().String("volume-max", "", "")
	rootCmd.Flags().Bool("vulkan-async-compute", false, "")
	rootCmd.Flags().Bool("vulkan-async-transfer", false, "")
	rootCmd.Flags().String("vulkan-device", "", "")
	rootCmd.Flags().Bool("vulkan-disable-events", false, "")
	rootCmd.Flags().String("vulkan-display-display", "", "")
	rootCmd.Flags().String("vulkan-display-mode", "", "")
	rootCmd.Flags().String("vulkan-display-plane", "", "")
	rootCmd.Flags().String("vulkan-queue-count", "", "")
	rootCmd.Flags().String("vulkan-swap-mode", "", "")
	rootCmd.Flags().String("watch-later-directory", "", "")
	rootCmd.Flags().String("watch-later-options", "", "")
	rootCmd.Flags().String("watch-later-options-add", "", "")
	rootCmd.Flags().String("watch-later-options-append", "", "")
	rootCmd.Flags().String("watch-later-options-clr", "", "")
	rootCmd.Flags().String("watch-later-options-del", "", "")
	rootCmd.Flags().String("watch-later-options-pre", "", "")
	rootCmd.Flags().String("watch-later-options-remove", "", "")
	rootCmd.Flags().String("watch-later-options-set", "", "")
	rootCmd.Flags().String("watch-later-options-toggle", "", "")
	rootCmd.Flags().String("wayland-app-id", "", "")
	rootCmd.Flags().Bool("wayland-disable-vsync", false, "")
	rootCmd.Flags().String("wayland-edge-pixels-pointer", "", "")
	rootCmd.Flags().String("wayland-edge-pixels-touch", "", "")
	rootCmd.Flags().String("wid", "", "")
	rootCmd.Flags().Bool("window-dragging", false, "")
	rootCmd.Flags().Bool("window-maximized", false, "")
	rootCmd.Flags().Bool("window-minimized", false, "")
	rootCmd.Flags().String("window-scale", "", "")
	rootCmd.Flags().Bool("write-filename-in-watch-later-config", false, "")
	rootCmd.Flags().String("x11-bypass-compositor", "", "")
	rootCmd.Flags().String("x11-name", "", "")
	rootCmd.Flags().String("x11-netwm", "", "")
	rootCmd.Flags().String("xv-adaptor", "", "")
	rootCmd.Flags().String("xv-buffers", "", "")
	rootCmd.Flags().String("xv-ck", "", "")
	rootCmd.Flags().String("xv-ck-method", "", "")
	rootCmd.Flags().String("xv-colorkey", "", "")
	rootCmd.Flags().String("xv-port", "", "")
	rootCmd.Flags().Bool("ytdl", false, "")
	rootCmd.Flags().String("ytdl-format", "", "")
	rootCmd.Flags().String("ytdl-raw-options", "", "")
	rootCmd.Flags().String("ytdl-raw-options-add", "", "")
	rootCmd.Flags().String("ytdl-raw-options-append", "", "")
	rootCmd.Flags().String("ytdl-raw-options-remove", "", "")
	rootCmd.Flags().String("ytdl-raw-options-set", "", "")
	rootCmd.Flags().String("zimg-dither", "", "")
	rootCmd.Flags().Bool("zimg-fast", false, "")
	rootCmd.Flags().String("zimg-scaler", "", "")
	rootCmd.Flags().String("zimg-scaler-chroma", "", "")
	rootCmd.Flags().String("zimg-scaler-chroma-param-a", "", "")
	rootCmd.Flags().String("zimg-scaler-chroma-param-b", "", "")
	rootCmd.Flags().String("zimg-scaler-param-a", "", "")
	rootCmd.Flags().String("zimg-scaler-param-b", "", "")
	rootCmd.Flags().String("zimg-threads", "", "")
	rootCmd.Flags().Bool("{", false, "")
	rootCmd.Flags().Bool("}", false, "")

	rootCmd.Flags().VisitAll(func(f *pflag.Flag) {
		if f.NoOptDefVal == "" {
			f.NoOptDefVal = " "
		}
	})

	carapace.Gen(rootCmd).FlagCompletion(carapace.ActionMap{
		"ab-loop-count":                     carapace.ActionValues("inf"),
		"ad":                                mpv.ActionAudioDecoders().UniqueList(","),
		"af":                                mpv.ActionAudioFilters().List(","),
		"aid":                               carapace.ActionValues("no", "auto").StyleF(style.ForKeyword),
		"alpha":                             carapace.ActionValues("no", "yes", "blend", "blend-tiles").StyleF(style.ForKeyword),
		"ao-pcm-file":                       carapace.ActionFiles(),
		"audio-backward-overlap":            carapace.ActionValues("auto"),
		"audio-display":                     carapace.ActionValues("no", "embedded-first", "external-first").StyleF(style.ForKeyword),
		"audio-file-auto":                   carapace.ActionValues("no", "exact", "fuzzy", "all").StyleF(style.ForKeyword),
		"audio-file-paths":                  carapace.ActionFiles().List(string(os.PathListSeparator)),
		"audio-files":                       carapace.ActionFiles().List(string(os.PathListSeparator)),
		"autosync":                          carapace.ActionValues("no").StyleF(style.ForKeyword),
		"blend-subtitles":                   carapace.ActionValues("no", "yes", "video").StyleF(style.ForKeyword),
		"bluray-device":                     carapace.ActionFiles(),
		"cache":                             carapace.ActionValues("no", "auto", "yes").StyleF(style.ForKeyword),
		"cache-dir":                         carapace.ActionFiles(),
		"cache-unlink-files":                carapace.ActionValues("immediate", "whendone", "no").StyleF(style.ForKeyword),
		"cdrom-device":                      carapace.ActionFiles(),
		"chapters-file":                     carapace.ActionFiles(),
		"config-dir":                        carapace.ActionFiles(),
		"cookies-file":                      carapace.ActionFiles(),
		"cover-art-auto":                    carapace.ActionValues("no", "exact", "fuzzy", "all").StyleF(style.ForKeyword),
		"cover-art-files":                   carapace.ActionFiles().List(string(os.PathListSeparator)),
		"cuda-decode-device":                carapace.ActionValues("auto"),
		"cursor-autohide":                   carapace.ActionValues("no", "always").StyleF(style.ForKeyword),
		"demuxer-lavf-linearize-timestamps": carapace.ActionValues("no", "auto", "yes").StyleF(style.ForKeyword),
		"demuxer-lavf-probe-info":           carapace.ActionValues("no", "yes", "auto", "nostreams").StyleF(style.ForKeyword),
		"demuxer-mkv-probe-video-duration":  carapace.ActionValues("no", "yes", "full").StyleF(style.ForKeyword),
		"demuxer-mkv-subtitle-preroll":      carapace.ActionValues("no", "yes", "index").StyleF(style.ForKeyword),
		"demuxer-rawaudio-format":           carapace.ActionValues("u8", "s8", "u16le", "u16be", "s16le", "s16be", "u24le", "u24be", "s24le", "s24be", "u32le", "u32be", "s32le", "s32be", "floatle", "floatbe", "doublele", "doublebe", "u16", "s16", "u24", "s24", "u32", "s32", "float", "double"),
		"demuxer-seekable-cache":            carapace.ActionValues("auto", "no", "yes").StyleF(style.ForKeyword),
		"dither":                            carapace.ActionValues("fruit", "ordered", "error-diffusion", "no").StyleF(style.ForKeyword),
		"dither-depth":                      carapace.ActionValues("no", "auto").StyleF(style.ForKeyword),
		"drm-atomic":                        carapace.ActionValues("no", "auto").StyleF(style.ForKeyword),
		"drm-device":                        carapace.ActionFiles(),
		"drm-draw-plane":                    carapace.ActionValues("primary", "overlay"),
		"drm-drmprime-video-plane":          carapace.ActionValues("primary", "overlay"),
		"drm-format":                        carapace.ActionValues("xrgb8888", "xrgb2101010"),
		"dump-stats":                        carapace.ActionFiles(),
		"dvbin-file":                        carapace.ActionFiles(),
		"dvd-device":                        carapace.ActionFiles(),
		"edition":                           carapace.ActionValues("auto"),
		"external-files":                    carapace.ActionFiles().List(string(os.PathListSeparator)),
		"force-window":                      carapace.ActionValues("no", "yes", "immediate").StyleF(style.ForKeyword),
		"framedrop":                         carapace.ActionValues("no", "vo", "decoder", "decoder+vo").StyleF(style.ForKeyword),
		"frames":                            carapace.ActionValues("all"),
		"fs-screen":                         carapace.ActionValues("all", "current"),
		"gapless-audio":                     carapace.ActionValues("no", "yes", "weak").StyleF(style.ForKeyword),
		"glsl-shaders":                      carapace.ActionFiles().List(string(os.PathListSeparator)),
		"gpu-dumb-mode":                     carapace.ActionValues("auto", "yes", "no").StyleF(style.ForKeyword),
		"gpu-shader-cache-dir":              carapace.ActionFiles(),
		"hdr-compute-peak":                  carapace.ActionValues("auto", "yes", "no").StyleF(style.ForKeyword),
		"hls-bitrate":                       carapace.ActionValues("no", "min", "max").StyleF(style.ForKeyword),
		"hr-seek":                           carapace.ActionValues("no", "absolute", "yes", "always", "default").StyleF(style.ForKeyword),
		"hwdec":                             mpv.ActionHardwareDecodingAPIs(),
		"icc-cache-dir":                     carapace.ActionFiles(),
		"icc-force-contrast":                carapace.ActionValues("no", "inf").StyleF(style.ForKeyword),
		"icc-profile":                       carapace.ActionFiles(),
		"idle":                              carapace.ActionValues("no", "once", "yes").StyleF(style.ForKeyword),
		"include":                           carapace.ActionFiles(),
		"index":                             carapace.ActionValues("default", "recreate"),
		"input-conf":                        carapace.ActionFiles(),
		"input-ipc-server":                  carapace.ActionFiles(),
		"jack-std-channel-layout":           carapace.ActionValues("waveext", "any"),
		"keep-open":                         carapace.ActionValues("no", "yes", "always").StyleF(style.ForKeyword),
		"load-auto-profiles":                carapace.ActionValues("no", "yes", "auto").StyleF(style.ForKeyword),
		"log-file":                          carapace.ActionFiles(),
		"loop-file":                         carapace.ActionValues("no", "inf", "yes").StyleF(style.ForKeyword),
		"loop-playlist":                     carapace.ActionValues("no", "inf", "yes", "force").StyleF(style.ForKeyword),
		"mute":                              carapace.ActionValues("no", "auto", "yes").StyleF(style.ForKeyword),
		"o":                                 carapace.ActionFiles(),
		"ontop-level":                       carapace.ActionValues("window", "system", "desktop"),
		"opengl-early-flush":                carapace.ActionValues("no", "yes", "auto").StyleF(style.ForKeyword),
		"opengl-es":                         carapace.ActionValues("auto", "yes", "no").StyleF(style.ForKeyword),
		"ordered-chapters-files":            carapace.ActionFiles(),
		"osd-align-x":                       carapace.ActionValues("left", "center", "right"),
		"osd-align-y":                       carapace.ActionValues("top", "center", "bottom"),
		"osd-font-provider":                 carapace.ActionValues("auto", "none", "fontconfig"),
		"osd-justify":                       carapace.ActionValues("auto", "left", "center", "right"),
		"osd-level":                         carapace.ActionValues("0", "1", "2", "3"),
		"osd-on-seek":                       carapace.ActionValues("no", "bar", "msg", "msg-bar").StyleF(style.ForKeyword),
		"play-dir":                          carapace.ActionValues("forward", "backward"),
		"player-operation-mode":             carapace.ActionValues("cplayer", "pseudo-gui"),
		"playlist":                          carapace.ActionFiles(),
		"playlist-start":                    carapace.ActionValues("auto", "no").StyleF(style.ForKeyword),
		"pulse-buffer":                      carapace.ActionValues("native"),
		"replaygain":                        carapace.ActionValues("no", "track", "album").StyleF(style.ForKeyword),
		"rtsp-transport":                    carapace.ActionValues("lavf", "udp", "tcp", "http", "udp_multicast"),
		"screen":                            carapace.ActionValues("default"),
		"screenshot-directory":              carapace.ActionFiles(),
		"screenshot-format":                 carapace.ActionValues("jpg", "jpeg", "png", "webp"),
		"scripts":                           carapace.ActionFiles().List(string(os.PathListSeparator)),
		"secondary-sid":                     carapace.ActionValues("no", "auto").StyleF(style.ForKeyword),
		"sid":                               carapace.ActionValues("no", "auto").StyleF(style.ForKeyword),
		"spirv-compiler":                    carapace.ActionValues("auto", "shaderc"),
		"stream-dump":                       carapace.ActionFiles(),
		"sub-align-x":                       carapace.ActionValues("left", "center", "right"),
		"sub-align-y":                       carapace.ActionValues("top", "center", "bottom"),
		"sub-ass-hinting":                   carapace.ActionValues("none", "light", "normal", "native"),
		"sub-ass-override":                  carapace.ActionValues("no", "yes", "force", "scale", "strip").StyleF(style.ForKeyword),
		"sub-ass-shaper":                    carapace.ActionValues("simple", "complex"),
		"sub-ass-styles":                    carapace.ActionFiles(),
		"sub-ass-vsfilter-color-compat":     carapace.ActionValues("no", "basic", "full", "force-601").StyleF(style.ForKeyword),
		"sub-auto":                          carapace.ActionValues("no", "exact", "fuzzy", "all").StyleF(style.ForKeyword),
		"sub-file-paths":                    carapace.ActionFiles().List(string(os.PathListSeparator)),
		"sub-files":                         carapace.ActionFiles().List(string(os.PathListSeparator)),
		"sub-font-provider":                 carapace.ActionValues("auto", "none", "fontconfig"),
		"sub-forced-only":                   carapace.ActionValues("auto", "no", "yes").StyleF(style.ForKeyword),
		"sub-justify":                       carapace.ActionValues("auto", "left", "center", "right"),
		"sws-scaler":                        carapace.ActionValues("fast-bilinear", "bilinear", "bicubic", "x", "point", "area", "bicublin", "gauss", "sinc", "lanczos", "spline"),
		"target-peak":                       carapace.ActionValues("auto"),
		"target-prim":                       carapace.ActionValues("auto", "bt.601-525", "bt.601-625", "bt.709", "bt.2020", "bt.470m", "apple", "adobe", "prophoto", "cie1931", "dci-p3", "display-p3", "v-gamut", "s-gamut"),
		"target-trc":                        carapace.ActionValues("auto", "bt.1886", "srgb", "linear", "gamma1.8", "gamma2.0", "gamma2.2", "gamma2.4", "gamma2.6", "gamma2.8", "prophoto", "pq", "hlg", "v-log", "s-log1", "s-log2"),
		"term-osd":                          carapace.ActionValues("force", "auto", "no").StyleF(style.ForKeyword),
		"tls-ca-file":                       carapace.ActionFiles(),
		"tls-cert-file":                     carapace.ActionFiles(),
		"tls-key-file":                      carapace.ActionFiles(),
		"tone-mapping":                      carapace.ActionValues("clip", "mobius", "reinhard", "hable", "gamma", "linear", "bt.2390"),
		"vd":                                mpv.ActionVideoDecoders().UniqueList(","),
		"vd-lavc-framedrop":                 carapace.ActionValues("none", "default", "nonref", "bidir", "nonkey", "all"),
		"vd-lavc-skipframe":                 carapace.ActionValues("none", "default", "nonref", "bidir", "nonkey", "all"),
		"vd-lavc-skipidct":                  carapace.ActionValues("none", "default", "nonref", "bidir", "nonkey", "all"),
		"vd-lavc-skiploopfilter":            carapace.ActionValues("none", "default", "nonref", "bidir", "nonkey", "all"),
		"vd-lavc-software-fallback":         carapace.ActionValues("no", "yes").StyleF(style.ForKeyword),
		"vf":                                mpv.ActionVideoFilters().List(","),
		"vid":                               carapace.ActionValues("no", "auto").StyleF(style.ForKeyword),
		"video-aspect-method":               carapace.ActionValues("bitstream", "container"),
		"video-backward-overlap":            carapace.ActionValues("auto"),
		"video-output-levels":               carapace.ActionValues("auto", "limited", "full"),
		"video-rotate":                      carapace.ActionValues("no").StyleF(style.ForKeyword),
		"video-sync":                        carapace.ActionValues("audio", "display-resample", "display-resample-vdrop", "display-resample-desync", "display-adrop", "display-vdrop", "display-desync", "desync"),
		"video-unscaled":                    carapace.ActionValues("no", "yes", "downscale-big").StyleF(style.ForKeyword),
		"vo-image-format":                   carapace.ActionValues("jpg", "jpeg", "png", "webp"),
		"vo-image-outdir":                   carapace.ActionFiles(),
		"vo-tct-algo":                       carapace.ActionValues("plain", "half-blocks"),
		"vo-vaapi-scaling":                  carapace.ActionValues("default", "fast", "hq", "nla"),
		"vulkan-swap-mode":                  carapace.ActionValues("auto", "fifo", "fifo-relaxed", "mailbox", "immediate"),
		"watch-later-directory":             carapace.ActionFiles(),
		"x11-bypass-compositor":             carapace.ActionValues("no", "yes", "fs-only", "never").StyleF(style.ForKeyword),
		"x11-netwm":                         carapace.ActionValues("auto", "no", "yes").StyleF(style.ForKeyword),
		"xv-ck":                             carapace.ActionValues("use", "set", "cur"),
		"xv-ck-method":                      carapace.ActionValues("none", "bg", "man", "auto"),
		"zimg-dither":                       carapace.ActionValues("no", "ordered", "random", "error-diffusion").StyleF(style.ForKeyword),
		"zimg-scaler":                       carapace.ActionValues("point", "bilinear", "bicubic", "spline16", "spline36", "lanczos"),
		"zimg-scaler-chroma":                carapace.ActionValues("point", "bilinear", "bicubic", "spline16", "spline36", "lanczos"),
		"zimg-threads":                      carapace.ActionValues("auto"),
	})

	carapace.Gen(rootCmd).PositionalAnyCompletion(carapace.ActionFiles())
}
